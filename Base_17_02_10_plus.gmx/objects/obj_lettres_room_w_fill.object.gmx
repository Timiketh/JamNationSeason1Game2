<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_string_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
init = false;

reinit = true;

pourcentage = 5;

w = room_width;

lettres = ds_list_create();

objlet=obj_lettre;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ds_list_destroy(lettres);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Init variables
if (!init)
{
    oldW = w;
    oldPourcentage = pourcentage;
    
    
    test_spr = lettre(string_char_at(phrase, 1));

    spr_w = sprite_get_width(test_spr);
    spr_h = sprite_get_height(test_spr);

    
    letter_w = (pourcentage/100)*w;
    
    nbreW = w / letter_w;
    
    scale = (w/nbreW)/spr_w;
    
    letter_w = spr_w * scale;
    letter_h = spr_h * scale;
    init = true;
    
    scr_set_lines_length_for_string(id, phrase);
    
    var newNbreW = 0;
    
    if (separations[0] != 9999)
    {
        newNbreW = separations[0];
    }
    for (var i = 1; i &lt; array_length_1d(separations); i += 1)
    {
        if (separations[i] != 9999)
        {
            if (((separations[i] - separations[i-1]) - 1) &gt; newNbreW)
            {
                newNbreW = (separations[i] - (separations[i-1])) - 1;
            }
        }
    }
    
    pourcentage *= (nbreW/(newNbreW));
    
    if (oldW != w || oldPourcentage != pourcentage)
    {
        oldW = w;
        oldPourcentage = pourcentage;
        
        test_spr = lettre(string_char_at(phrase, 1));

        spr_w = sprite_get_width(test_spr);
        spr_h = sprite_get_height(test_spr);
        
        letter_w = (pourcentage/100)*w;
        
        nbreW = w / letter_w;
        
        scale = (w/nbreW)/spr_w;
        
        letter_w = spr_w * scale;
        letter_h = spr_h * scale;
    }
    
    var taille = string_length(phrase);

    var indexX = 0;
    var indexY = 0;
    
    for (var i = 1; i &lt;= taille; i += 1)
    {
        if (i &gt; separations[indexY])
        {
            indexX = 0;
            indexY += 1;
        }
        else
        {
            var ilettre = instance_create((letter_w/2)+x+(letter_w*indexX), (letter_h/2)+y+(letter_h*indexY), objlet);
            ilettre.sprite_index = lettre(string_char_at(phrase, i));
            ds_list_add(lettres, ilettre);
            indexX += 1;
        }
    }
}
if (oldW != w || oldPourcentage != pourcentage)
{
    oldW = w;
    oldPourcentage = pourcentage;
    
    test_spr = lettre(string_char_at(phrase, 1));

    spr_w = sprite_get_width(test_spr);
    spr_h = sprite_get_height(test_spr);
    
    letter_w = (pourcentage/100)*w;
    
    nbreW = w / letter_w;
    
    scale = (w/nbreW)/spr_w;
    
    letter_w = spr_w * scale;
    letter_h = spr_h * scale;
    reinit = true;
}
if (oldPhrase != phrase)
{
    oldPhrase = phrase;
    scr_set_lines_length_for_string(id, phrase);
    
    var newNbreW = 0;
    
    if (separations[0] != 9999)
    {
        newNbreW = separations[0];
    }
    for (var i = 1; i &lt; array_length_1d(separations); i += 1)
    {
        if (separations[i] != 9999)
        {
            if (((separations[i] - separations[i-1]) - 1) &gt; newNbreW)
            {
                newNbreW = (separations[i] - (separations[i-1])) - 1;
            }
        }
    }
    
    pourcentage *= (nbreW/(newNbreW));
    
    if (oldW != w || oldPourcentage != pourcentage)
    {
        oldW = w;
        oldPourcentage = pourcentage;
        
        test_spr = lettre(string_char_at(phrase, 1));

        spr_w = sprite_get_width(test_spr);
        spr_h = sprite_get_height(test_spr);
        
        letter_w = (pourcentage/100)*w;
        
        nbreW = w / letter_w;
        
        scale = (w/nbreW)/spr_w;
        
        letter_w = spr_w * scale;
        letter_h = spr_h * scale;
    }
    var tailleLettres = ds_list_size(lettres);

    for (var i = 0; i &lt; tailleLettres; i += 1)
    {
        var ilettre = ds_list_find_value(lettres, i);
        with(ilettre)
        {
            instance_destroy();
        }
    }
    
    ds_list_clear(lettres);
    
    var taille = string_length(phrase);

    var indexX = 0;
    var indexY = 0;
    
    for (var i = 1; i &lt;= taille; i += 1)
    {
        if (i &gt; separations[indexY])
        {
            indexX = 0;
            indexY += 1;
        }
        else
        {
            var ilettre = instance_create((letter_w/2)+x+(letter_w*indexX), (letter_h/2)+y+(letter_h*indexY), objlet);
            ilettre.sprite_index = lettre(string_char_at(phrase, i));
            ds_list_add(lettres, ilettre);
            indexX += 1;
        }
    }
    reinit = true;
}

if (reinit)
{
    reinit = false;
    var tailleLettres = ds_list_size(lettres);
    
    for (var i = 0; i &lt; tailleLettres; i += 1)
    {
        var ilettre = ds_list_find_value(lettres, i);
        ilettre.image_xscale = scale;
        ilettre.image_yscale = scale;
        ilettre.stopRotationOnArrival = true;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!persistent &amp;&amp; !persist())
{
    ds_list_destroy(lettres);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///overwrite obj_string_parent
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
