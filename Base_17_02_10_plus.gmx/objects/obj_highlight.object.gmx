<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>target = -1;
effet = instance_create(0,0,obj_shader_highlight);
effet.persistent = true;

useImageIndex = true;
useImage = 0;

w = 3;
decal = 2;
startAlpha = 0.5;

scaleFacteur = 1;

offsetX = 0;
offsetY = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (-1 != effet &amp;&amp; instance_exists(effet))
{
    with (effet)
    {
        instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (-1 != target &amp;&amp; instance_exists(target))
{
    depth = target.depth + 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>target = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (-1 != target &amp;&amp; instance_exists(target))
{
    if (shader_is_compiled(effet.shader))
    {   
        shader_set(effet.shader);
        var imageIndex = target.image_index;
        if (!useImageIndex)
        {
            imageIndex = useImage;
        }
        var decalValue = w/decal;
        var it = decal-1;
        for (var i = w; i &gt; 0.000001; i -= decalValue)
        {
            scr_shader_add_param(effet, obj_shaders.highlight_gm_alpha, ((decal-it)/decal)*startAlpha);
            scr_shader_set_params(effet);
            draw_sprite_ext(target.sprite_index, imageIndex, target.x+i+offsetX, target.y+offsetY, target.image_xscale*scaleFacteur, target.image_yscale*scaleFacteur, target.image_angle, target.image_blend, target.image_alpha);
            draw_sprite_ext(target.sprite_index, imageIndex, target.x+offsetX, target.y+i+offsetY, target.image_xscale*scaleFacteur, target.image_yscale*scaleFacteur, target.image_angle, target.image_blend, target.image_alpha);
            draw_sprite_ext(target.sprite_index, imageIndex, target.x-i+offsetX, target.y+offsetY, target.image_xscale*scaleFacteur, target.image_yscale*scaleFacteur, target.image_angle, target.image_blend, target.image_alpha);
            draw_sprite_ext(target.sprite_index, imageIndex, target.x+offsetX, target.y-i+offsetY, target.image_xscale*scaleFacteur, target.image_yscale*scaleFacteur, target.image_angle, target.image_blend, target.image_alpha);
            it -= 1;
        }
        shader_reset();
    }
    else
    {
        //TODO : Trouver un effet alternatif si le shader est pas compil√©...
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
