<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-99999</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Focuses + execute
distanceActive = 150;

oldActive = -1;
currentActive = -1;

target = -1;

condition = obj_call_true;
scr_safe_check(obj_touche_a);
scr_safe_check(obj_touche_s);

offsetX = 0;
offsetY = 0;

thisDist = 0;

selectActivable = new_call_1(scr_get_closest_activable, id);
selectActivable.persistent = true;
defaultActivable = selectActivable;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>currentActive = noone;
if (-1 != target &amp;&amp; instance_exists(target))
{
    //La variable currentActive de l'instance courante doit être settée dans l'exécution de selectActivable
    //          vvvvvvvvvvvvvvv
    scr_execute(selectActivable);
    
    if (oldActive != -1 &amp;&amp; instance_exists(oldActive) &amp;&amp; currentActive != noone)
    {
        if (oldActive.hasFocus &amp;&amp; (currentActive != oldActive || (!target.able || point_distance(target.x+offsetX, target.y+offsetY, currentActive.x+currentActive.offsetX, currentActive.y+currentActive.offsetY) &gt;= currentActive.distanceActive  || !scr_execute(condition) || !scr_execute(currentActive.condition))))
        {
            scr_execute(oldActive.offFocus);
            oldActive.hasFocus = false;
        }
    }
    if (noone != currentActive &amp;&amp; currentActive != -1)
    {
        //Si premier step du jeu et que l'objet condition a pas eu le temps de s'initialiser, besion d'exécuter son step_begin.
        with (condition)
        {
            event_perform(ev_step, ev_step_begin);
        }

        ///DEBUG vvvvv
        if (keyboard_check_pressed(ord("7")))
        {
            show_debug_message(target.able);
            show_debug_message(point_distance(target.x+offsetX, target.y+offsetY, currentActive.x+currentActive.offsetX, currentActive.y+currentActive.offsetY) &lt; currentActive.distanceActive);
            show_debug_message(scr_execute(condition));
            show_debug_message(scr_execute(currentActive.condition));
        }
        ///^^^^^^^
        
        if (target.able &amp;&amp; point_distance(target.x+offsetX, target.y+offsetY, currentActive.x+currentActive.offsetX, currentActive.y+currentActive.offsetY) &lt; currentActive.distanceActive &amp;&amp; scr_execute(condition) &amp;&amp; scr_execute(currentActive.condition))
        {
            if (!currentActive.hasFocus)
            {
                with(obj_activable)
                {
                    hasFocus = false;
                }
                scr_execute(currentActive.onFocus);
                currentActive.hasFocus = true;
            }
            if (scr_execute(currentActive.conditionActivation))
            {
                scr_execute(currentActive.onPickUp);
            }
        }
    }
}

oldActive = currentActive;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with(obj_activable)
{
    hasFocus = false;
}
if (-1 != currentActive &amp;&amp; noone != currentActive &amp;&amp; instance_exists(currentActive)) 
{
    scr_execute(currentActive.offFocus);
}
currentActive = noone;
target.able = true;

offsetX = 0;
offsetY = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!instance_exists(target))
{
    target = -1;
}
if (!instance_exists(condition))
{
    condition = obj_call_true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (noone != currentActive &amp;&amp; -1 != currentActive &amp;&amp; instance_exists(currentActive))
{
    //draw_circle_colour(currentActive.x+currentActive.offsetX, currentActive.y+currentActive.offsetY, 4, c_lime, c_lime, false);
    //draw_circle_colour(currentActive.x+currentActive.offsetX, currentActive.y+currentActive.offsetY, currentActive.distanceActive, c_lime, c_lime, true);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
