<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>espoirinfini=ds_list_create();
liste_piece=ds_list_create();

texte=file_text_open_read(scr_get_localized_file("EspoirInfini1.txt"));
while (!file_text_eof(texte)){
   ds_list_add(espoirinfini,file_text_readln(texte));
   file_text_readln(texte);
}
index=0;
phrase=ds_list_find_value(espoirinfini,index);
ds_list_add(liste_piece,room_espace8);
ds_list_add(liste_piece,room_pre_espace_1);
ds_list_add(liste_piece,room_pre_espace_8);
ds_list_add(liste_piece,room_espace6);
ds_list_add(liste_piece,room_pre_espace_2);
ds_list_add(liste_piece,room_pre_espace_4);
ds_list_add(liste_piece,room_pre_espace_7);
ds_list_add(liste_piece,room_pre_espace_3);
ds_list_add(liste_piece,room_pre_espace_6);
ds_list_add(liste_piece,room_pre_espace_9);
ds_list_add(liste_piece,room_espace10);
ds_list_add(liste_piece,room_espace3);
ds_list_add(liste_piece,room_espace5);
ds_list_add(liste_piece,room_espace12);
ds_list_add(liste_piece,room_espace13);
ds_list_add(liste_piece,room_espace11);

indexp=0
indp=0
piece=ds_list_find_value(liste_piece,indp);
desordre=false;
pret=false;
alarm[0]=5;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ds_list_destroy(liste_piece);
ds_list_destroy(espoirinfini);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>pret=true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

if(indp!=indexp){
    indp=indexp;
    if(indp&lt;ds_list_size(liste_piece)){
        piece=ds_list_find_value(liste_piece,indp);
    }else{
        phrase = "";
        room_goto(room_espace_transition);
    }
}
if(pret){
    if(view_wview[view_current]/room_width&gt;=0.99){
        if(desordre=false){
            with(obj_lettre){
                startX = x;
                startY = y;
                destX=irandom(room_width);
                destY=irandom(room_height);
                vitesse=random(0.1);
                rotationVitesse=random(0.05)-0.025;
                
            }
            desordre=true;
        }
    }
}

if (desordre)
{
    with (obj_lettre)
    {
        if (abs(image_angle) &gt; 15)
        {
            rotationVitesse *= -1;
        }
        if (point_distance(startX, startY, x, y) &gt; 10)
        {
            var dir = point_direction(startX, startY, destX, destY);
            dir += 180;
            destX = startX + lengthdir_x(100, dir);
            destY = startY + lengthdir_y(100, dir);
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!persistent &amp;&amp; !persist()) 
{
    ds_list_destroy(liste_piece);
    ds_list_destroy(espoirinfini);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
