<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scr_safe_check(obj_const_touches);
scr_safe_check(obj_nbre_joueur);
nbreJoueur = obj_nbre_joueur.nbre;
joueurs = ds_list_create();

var nbreGamepads = gamepad_get_device_count();
var connectedGamePadsNbre = 0;
for (var i = 0; i &lt; nbreGamepads; i += 1)
{
    if (gamepad_is_connected(i))
    {
        connectedGamePadsNbre += 1;
    }
}

connectedGamePads[0] = -1;
for (var i = 1; i &lt;= connectedGamePadsNbre; i += 1)
{
    connectedGamePads[connectedGamePadsNbre-i] = -1;
}

currentGamePad = 0;

for (var i = 0; i &lt; nbreGamepads; i += 1)
{
    if (gamepad_is_connected(i))
    {
        connectedGamePads[currentGamePad] = i;
    }
}

currentGamePad = 0;


joueur1 = instance_create(0,0,obj_joueur);
//show_message("joueur1 : "+string(joueur1));
if (!(nbreJoueur &lt;= connectedGamePadsNbre))
{
    joueur1.buttonCheckerDir = new_call();
    joueur1.buttonCheckerDir.execute = scr_keyboard_dir;
    joueur1.buttonCheckerDir.argc = 2;
    joueur1.buttonCheckerDir.argv[1] = joueur1;
    joueur1.buttonChecker = new_call();
    joueur1.buttonChecker.execute = scr_keyboard;
    joueur1.buttonChecker.argc = 1;
    //show_message("buttonChecker pour joueur1 : "+string(joueur1.buttonChecker));
    joueur1.up.touche = obj_const_touches.joueur1Up;
    joueur1.down.touche = obj_const_touches.joueur1Down;
    joueur1.left.touche = obj_const_touches.joueur1Left;
    joueur1.right.touche = obj_const_touches.joueur1Right;
    joueur1.touche1.touche = obj_const_touches.joueur1Touche1;
    joueur1.touche2.touche = obj_const_touches.joueur1Touche2;
}
else
{
    joueur1.buttonCheckerDir = new_call();
    joueur1.buttonCheckerDir.execute = scr_gp_dir;
    joueur1.buttonCheckerDir.argc = 2;
    joueur1.buttonCheckerDir.argv[1] = connectedGamePads[currentGamePad];
    joueur1.buttonChecker = new_call();
    joueur1.buttonChecker.execute= scr_gp_button;
    joueur1.buttonChecker.argc = 2;
    joueur1.buttonChecker.argv[1] = connectedGamePads[currentGamePad];
    //show_message("buttonChecker pour joueur1 : "+string(joueur1.buttonChecker));
    joueur1.touche1.touche = obj_const_touches.gamepadTouche1;
    joueur1.touche2.touche = obj_const_touches.gamepadTouche2;
    currentGamePad += 1;
}
joueur1.image_blend = c_black;

joueur2 = instance_create(0,0,obj_joueur);
if (nbreJoueur &gt;= 2)
{
    if (!(nbreJoueur-1 &lt;= connectedGamePadsNbre))
    {
        joueur2.buttonCheckerDir = new_call();
        joueur2.buttonCheckerDir.execute = scr_keyboard_dir;
        joueur2.buttonCheckerDir.argc = 2;
        joueur2.buttonCheckerDir.argv[1] = joueur2;
        joueur2.buttonChecker = new_call();
        joueur2.buttonChecker.execute = scr_keyboard;
        joueur2.buttonChecker.argc = 1;
        joueur2.up.touche = obj_const_touches.joueur2Up;
        joueur2.down.touche = obj_const_touches.joueur2Down;
        joueur2.left.touche = obj_const_touches.joueur2Left;
        joueur2.right.touche = obj_const_touches.joueur2Right;
        joueur2.touche1.touche = obj_const_touches.joueur2Touche1;
        joueur2.touche2.touche = obj_const_touches.joueur2Touche2;
    }
    else
    {
        joueur2.buttonCheckerDir = new_call();
        joueur2.buttonCheckerDir.execute = scr_gp_dir;
        joueur2.buttonCheckerDir.argc = 2;
        joueur2.buttonCheckerDir.argv[1] = connectedGamePads[currentGamePad];
        joueur2.buttonChecker = new_call();
        joueur2.buttonChecker.execute= scr_gp_button;
        joueur2.buttonChecker.argc = 2;
        joueur2.buttonChecker.argv[1] = connectedGamePads[currentGamePad];
        joueur2.touche1.touche = obj_const_touches.gamepadTouche1;
        joueur2.touche2.touche = obj_const_touches.gamepadTouche2;
        currentGamePad += 1;
    }
}
joueur2.image_blend = c_green;

//POUR ARCADE ROYALE:
joueur3 = instance_create(0,0,obj_joueur);
if (nbreJoueur &gt;= 3)
{
    joueur3.buttonCheckerDir = new_call();
    joueur3.buttonCheckerDir.execute = scr_gp_dir;
    joueur3.buttonCheckerDir.argc = 2;
    joueur3.buttonCheckerDir.argv[1] = connectedGamePads[currentGamePad];
    joueur3.buttonChecker = new_call();
    joueur3.buttonChecker.execute= scr_gp_button;
    joueur3.buttonChecker.argc = 2;
    joueur3.buttonChecker.argv[1] = connectedGamePads[currentGamePad];
    joueur3.touche1.touche = obj_const_touches.gamepadTouche1;
    joueur3.touche2.touche = obj_const_touches.gamepadTouche2;
    currentGamePad += 1;
}
joueur3.image_blend = c_blue;

joueur4 = instance_create(0,0,obj_joueur);
if (nbreJoueur &gt;= 4)
{
    joueur4.buttonCheckerDir = new_call();
    joueur4.buttonCheckerDir.execute = scr_gp_dir;
    joueur4.buttonCheckerDir.argc = 2;
    joueur4.buttonCheckerDir.argv[1] = connectedGamePads[currentGamePad];
    joueur4.buttonChecker = new_call();
    joueur4.buttonChecker.execute= scr_gp_button;
    joueur4.buttonChecker.argc = 2;
    joueur4.buttonChecker.argv[1] = connectedGamePads[currentGamePad];
    joueur4.touche1.touche = obj_const_touches.gamepadTouche1;
    joueur4.touche2.touche = obj_const_touches.gamepadTouche2;
    currentGamePad += 1;
}
joueur4.image_blend = c_orange;


ds_list_add(joueurs, joueur1);

if (nbreJoueur &gt; 1)
{
    ds_list_add(joueurs, joueur2);
}

if (nbreJoueur &gt; 2)
{
    ds_list_add(joueurs, joueur3);
}

if (nbreJoueur &gt; 3)
{
    ds_list_add(joueurs, joueur4);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ds_list_destroy(joueurs);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
